USE furniture_mart
GO

--  Project 7: Marketing Campaign ROI Analysis
-- Objective: Analyze the return on investment (ROI) for various marketing campaigns.

--  Requirements:

-- 1. Track which customers were part of each marketing campaign by analyzing the market_segment
-- or region data.
SELECT 
    customer_id, 
    customer_name, 
    market_segment, 
    region, 
    COUNT(order_id) AS total_orders, 
    SUM(total_sales) AS total_sales, 
    SUM(profit) AS total_profit
FROM 
    dbo.Sales
WHERE 
    market_segment = 'Consumer' -- Filter by specific market segment
    OR region = 'West'          -- Filter by specific region (if applicable)
GROUP BY 
    customer_id, 
    customer_name, 
    market_segment, 
    region
ORDER BY 
    total_sales DESC;           -- Sorting by total sales or any other metric

SELECT 
    customer_id, 
    customer_name, 
    market_segment, 
    region, 
    sub_category,                         -- Grouping by product category
    COUNT(order_id) AS total_orders, 
    SUM(total_sales) AS total_sales, 
    SUM(profit) AS total_profit
FROM 
    dbo.Sales
WHERE 
    market_segment = 'Consumer'      -- Filter by market segment
    OR region = 'West'               -- Filter by region
GROUP BY 
    customer_id, 
    customer_name, 
    market_segment, 
    region, 
    sub_category                         -- Add the product category in the GROUP BY
ORDER BY 
    total_sales DESC;                -- Sorting by total sales or any other metric


-- 2. Calculate total sales generated by each campaign and the total profit contribution.
SELECT 
    market_segment,            -- Campaigns grouped by market segment (or region)
    region,                    -- Include region if campaigns are regional
    SUM(total_sales) AS total_sales_generated, 
    SUM(profit) AS total_profit_contribution
FROM 
    dbo.Sales
GROUP BY 
    market_segment,            -- Group by campaign (market segment)
    region                     -- Group by region (if needed)
ORDER BY 
    total_sales_generated DESC; -- Order by total sales to identify top-performing campaigns

-- 3. Determine which campaigns yielded the highest return on investment (ROI) based on total profit.
SELECT 
    market_segment,                     -- Campaigns grouped by market segment
  region,                             -- Include region if campaigns are regional
    SUM(total_sales) AS total_sales_generated, 
    SUM(profit) AS total_profit_contribution,
    round((SUM(profit) / SUM(total_sales)),2) AS ROI  -- Calculate ROI
FROM 
    dbo.Sales
GROUP BY 
    market_segment,                     -- Group by campaign (market segment)
    region                              -- Group by region (if needed)
HAVING 
    SUM(total_sales) > 0                -- Ensure we only calculate ROI where sales occurred
ORDER BY 
    ROI DESC;                           -- Order by ROI to identify the highest returns

--

SELECT 
    market_segment,                      -- Campaigns grouped by market segment
    SUM(total_sales) AS total_sales_generated, 
    SUM(profit) AS total_profit_contribution,
    (SUM(profit) / SUM(total_sales)) AS ROI  -- Calculate ROI
FROM 
    dbo.Sales
GROUP BY 
    market_segment                       -- Grouping only by market segment
HAVING 
    SUM(total_sales) > 0                 -- Ensure we only calculate ROI where sales occurred
ORDER BY 
    ROI DESC;                            -- Order by ROI to identify the highest returns

-- 4. Analyze sales trends before and after each marketing campaign to evaluate its impact.
--	 Sales Before the Campaign:
SELECT 
    market_segment,                       
    SUM(total_sales) AS sales_2014, 
    SUM(profit) AS profit_2014
FROM 
    dbo.Sales
WHERE 
    order_date BETWEEN '2014-01-06' AND '2014-12-31' -- Sales for the year 2014
GROUP BY 
    market_segment
ORDER BY 
    sales_2014 DESC;

-- Sales After the Campaign:
SELECT 
    market_segment,                       
    SUM(total_sales) AS sales_2015_2016, 
    SUM(profit) AS profit_2015_2016
FROM 
    dbo.Sales
WHERE 
    order_date BETWEEN '2015-01-01' AND '2016-12-31' -- Sales for 2015 and 2016
GROUP BY 
    market_segment
ORDER BY 
    sales_2015_2016 DESC;

SELECT 
    market_segment,                       
    SUM(total_sales) AS sales_2017, 
    SUM(profit) AS profit_2017
FROM 
    dbo.Sales
WHERE 
    order_date BETWEEN '2017-01-01' AND '2017-12-30' -- Sales for the year 2017
GROUP BY 
    market_segment
ORDER BY 
    sales_2017 DESC;

SELECT 
    market_segment,                       
    SUM(CASE WHEN order_date BETWEEN '2014-01-06' AND '2014-12-31' THEN total_sales ELSE 0 END) AS sales_2014,
    SUM(CASE WHEN order_date BETWEEN '2015-01-01' AND '2016-12-31' THEN total_sales ELSE 0 END) AS sales_2015_2016,
    SUM(CASE WHEN order_date BETWEEN '2017-01-01' AND '2017-12-30' THEN total_sales ELSE 0 END) AS sales_2017,
    SUM(CASE WHEN order_date BETWEEN '2014-01-06' AND '2014-12-31' THEN profit ELSE 0 END) AS profit_2014,
    SUM(CASE WHEN order_date BETWEEN '2015-01-01' AND '2016-12-31' THEN profit ELSE 0 END) AS profit_2015_2016,
    SUM(CASE WHEN order_date BETWEEN '2017-01-01' AND '2017-12-30' THEN profit ELSE 0 END) AS profit_2017
FROM 
    dbo.Sales
GROUP BY 
    market_segment
ORDER BY 
    sales_2015_2016 DESC; -- You can adjust this to sort by any other column (e.g., sales_2017)

-- 5. Create a segmentation analysis to understand which customer groups responded best to each
-- campaign

SELECT 
    market_segment,                    -- Grouping by market segment (e.g., Consumer, Corporate)
    region,                            -- Optionally group by region
    COUNT(DISTINCT customer_id) AS total_customers, -- Total unique customers per group
    SUM(total_sales) AS total_sales_generated,     -- Total sales per group
    SUM(profit) AS total_profit_contribution,      -- Total profit per group
    AVG(profit) / AVG(total_sales) AS avg_profit_margin -- Average profit margin to measure profitability
FROM 
    dbo.Sales
WHERE 
    order_date BETWEEN '2014-01-06' AND '2017-12-30'  -- Campaign date range
GROUP BY 
    market_segment, region             -- Group by customer attributes
ORDER BY 
    total_sales_generated DESC;         -- Identify which groups generated the most sales


SELECT 
    market_segment,                    
    sub_category,                      -- Grouping by product sub-category
    COUNT(DISTINCT customer_id) AS total_customers, 
    SUM(total_sales) AS total_sales_generated,     
    SUM(profit) AS total_profit_contribution,
    AVG(profit) / AVG(total_sales) AS avg_profit_margin
FROM 
    dbo.Sales
WHERE 
    order_date BETWEEN '2014-01-06' AND '2017-12-30'
GROUP BY 
    market_segment, sub_category        -- Group by both customer and product attributes
ORDER BY 
    total_sales_generated DESC;


